syntax = "proto3";
package common;

import "common/common.model.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "hopeio/utils/validator/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "hopeio/request/param.proto";
import "danielvladco/protobuf/graphql.proto";
import "hopeio/oauth/oauth.proto";
import "hopeio/utils/patch/go.proto";

option java_package = "xyz.hoper.protobuf.common";
option java_multiple_files = true;
option go_package = "github.com/liov/hoper/server/go/protobuf/common";

service CommonService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "公共服务接口"
  };

  // 新建
  rpc AddAttr (AddAttrReq) returns (request.Id) {
    option (google.api.http) = {
      post: "/api/v1/attr"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }


  // 详情
  rpc AttrInfo (request.Id) returns (Attr) {
    option (google.api.http) = {
      get: "/api/v1/attr/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }

  // 修改
  rpc EditAttr (EditAttrReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/attr/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }

  // 列表
  rpc AttrList (AttrListReq) returns (AttrListRep) {
    option (google.api.http) = {
      get: "/api/v1/attr"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }

  // 新建
  rpc AddTag (AddTagReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/tag"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }

  // 详情
  rpc TagInfo (request.Id) returns (common.Tag) {
    option (google.api.http) = {
      get: "/api/v1/tag/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }

  // 修改
  rpc EditTag (EditTagReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/tag/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }

  // 列表
  rpc TagList (TagListReq) returns (TagListRep) {
    option (google.api.http) = {
      get: "/api/v1/tag"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }

  rpc SendMail (SendMailReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/sendMail"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }
}

message AddAttrReq {
  string name = 1[(go.field) = {tags:'comment:"名称"'}];
  string desc = 2 [(go.field) = {tags:'comment:"描述"'}];
  string range = 4 [(go.field) = {tags:'gorm:"type:int2" comment:"属性使用范围"'}];
  DataType type = 5 [(go.field) = {tags:'gorm:"type:int2" comment:"属性的值输入格式"'}];
  uint64 userId = 6 [(go.field) = {tags:'comment:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
}

message EditAttrReq {
  uint64 id = 1 [(go.field) = {tags:'validate:"required"'}];
  string name = 2[(go.field) = {tags:'comment:"名称"'}];
  string desc = 3 [(go.field) = {tags:'comment:"描述"'}];
  string range = 4 [(go.field) = {tags:'gorm:"type:int2" comment:"属性使用范围"'}];
  DataType type = 5 [(go.field) = {tags:'gorm:"type:int2" comment:"属性的值输入格式"'}];
}

message AttrListReq{
  string name = 1[(go.field) = {tags:'comment:"名称"'}];
}

message AttrListRep{
  int64 total = 1;
  repeated common.Attr list = 2;
}

message AddTagReq {
  string name = 1[(go.field) = {tags:'comment:"名称"'}];
  string desc = 3 [(go.field) = {tags:'comment:"描述"'}];
  string image = 4 [(go.field) = {tags:'comment:"表情url"'}];
  uint32 type = 5 [(go.field) = {tags:'comment:"类型"'}];
  uint64 userId = 6 [(go.field) = {tags:'comment:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
}

message EditTagReq {
  uint64 id = 1 [(go.field) = {tags:'validate:"required"'}];
  string name = 2[(go.field) = {tags:'comment:"名称"'}];
  string desc = 3 [(go.field) = {tags:'comment:"描述"'}];
  string image = 4 [(go.field) = {tags:'comment:"表情url"'}];
  uint32 type = 5 [(go.field) = {tags:'comment:"类型"'}];
}


message TagListReq{
  string name = 1[(go.field) = {tags:'comment:"名称"'}];
  uint64 groupId = 5 [(go.field) = {tags:'comment:"groupId"'}];
  uint32 pageNo = 3;
  uint32 pageSize = 4;
}

message TagListRep{
  uint32 total = 1;
  repeated Tag list = 2;
}

message TagGroupListReq{
  string name = 3[(go.field) = {tags:'comment:"组名称"'}];
  uint32 pageNo = 4;
  uint32 pageSize = 5;
}

message SendMailReq {
  string addr = 1;
  string fromName = 2;
  string from = 3;
  string subject = 4;
  string contentType = 5;
  string content = 6;
  repeated string to = 7;
}

message SendSmsReq {
  string sign = 5;
  string content = 6;
  repeated string to = 7;
}