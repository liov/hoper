syntax = "proto3";
package file;
import "protoc-gen-openapiv2/options/annotations.proto";
import "hopeio/utils/validator/validator.proto";
import "google/api/annotations.proto";
import "danielvladco/protobuf/graphql.proto";
import "hopeio/utils/patch/go.proto";
import "google/protobuf/wrappers.proto";

option java_package = "xyz.hoper.protobuf.file";
option java_multiple_files = true;
option go_package = "github.com/liov/hoper/server/go/protobuf/file";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0"
  }
};

service FileService {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "文件中心相关接口"
  };
  // 获取url
  rpc GetUrls (GetUrlsReq) returns (GetUrlsRep) {
    option (google.api.http) = {
      post: "/api/v1/urls"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["获取url相关接口", "util", "v1.0.0"]
      summary : "获取url"
      description : "获取url接口"
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }

  // 获取url
  rpc GetUrlsByStrId (GetUrlsByStrIdReq) returns (GetUrlsRep) {
    option (google.api.http) = {
      get: "/api/v1/urls"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["获取url相关接口", "util", "v1.0.0"]
      summary : "获取url"
      description : "获取url接口"
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }
}

message GetUrlsReq {
  repeated uint64 ids = 1 [(go.field) = {tags:'validate:"required" comment:"ids"'}];
}

message GetUrlsByStrIdReq {
  string ids = 1 [(go.field) = {tags:'validate:"required" comment:"ids"'}];
}

message File {
  uint64 id = 1 [(go.field) = {tags:'comment:"id"'}];
  string url = 2 [(go.field) = {tags:'comment:"url"'}];
}

message GetUrlsRep {
  repeated File files = 1[(go.field) = {tags:'comment:"上传文件信息"'}];
}
