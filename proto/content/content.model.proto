syntax = "proto3";
package content;
import "common/common.model.proto";
import "hopeio/utils/enum/enum.proto";
import "hopeio/utils/patch/go.proto";
import "hopeio/time/time.proto";
import "hopeio/time/deletedAt/deletedAt.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "user/user.model.proto";

option java_package = "xyz.hoper.protobuf.content";
option java_multiple_files = true;
option go_package = "github.com/liov/hoper/server/go/protobuf/content";

option (enum.gqlgen_all) = true;
option (go.file) = {no_enum_prefix:true};

message ContentTag{
  uint64 refId = 6 [(go.field) = {tags:'gorm:"size:20;primaryKey" validate:"required" comment:"相关id"'}];
  uint64 tagId = 3[(go.field) = {tags:'gorm:"size:20;primaryKey" validate:"required" comment:"相关id"'}];
  uint32 relativity = 4[(go.field) = {tags:'gorm:"type:int2;not null;default:0" comment:"相关度"'}];
  time.Time createdAt = 25 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  deletedAt.DeletedAt deletedAt = 26 [(go.field) = {tags:'gorm:"<-:false;type:timestamptz(6);index"'}];
}

// 这种方式占空间，每条都要额外记录type，不如拆表moment_tag,moment_area
message ContentAttr{
  uint64 refId = 6 [(go.field) = {tags:'gorm:"size:20;not null;index:idx_content" validate:"required" comment:"content id"'}];
  uint64 attrId = 3 [(go.field) = {tags:'gorm:"size:20;not null;index:idx_attr" validate:"required" comment:"attr id"'}];
  string value = 4[(go.field) = {tags:'gorm:"type:text" validate:"required" comment:"属性值"'}];
  uint64 userId = 9 [(go.field) = {tags:'gorm:"size:20" comment:"用户id"'}];
  uint32 status = 28 [(go.field) = {tags:'gorm:"type:int2;default:0"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only:true
  }];
  time.Time createdAt = 16 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  time.Time updatedAt = 27 [(go.field) = {tags:'gorm:"type:timestamptz(6)"'}];
  deletedAt.DeletedAt deletedAt = 22 [(go.field) = {tags:'gorm:"type:timestamptz(6);index"'}];
}

// Deprecated 类型拆分
message Content{
  uint64 id = 1 [(go.field) = {tags:'gorm:"primaryKey"'}];
  ContentType type = 23[(go.field) = {tags:'gorm:"type:int2;index" comment:"类型"'}];
  string title = 24 [(go.field) = {tags:'gorm:"size:50;not null" comment:"标题"'}];
  string intro = 25 [(go.field) = {tags:'gorm:"size:100;not null" comment:"介绍"'}];
  string abstract = 26 [(go.field) = {tags:'gorm:"size:100;not null" comment:"摘要"'}];
  string content = 2 [(go.field) = {tags:'gorm:"text;not null" comment:"内容"'}];
  common.DocType docType = 28 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"文档类型"'}];
  repeated string images = 32 [(go.field) = {tags:'gorm:"type:text[];serializer:string_array" comment:"图片"'}];
  uint64 containerId = 4 [(go.field) = {tags:'gorm:"size:20;default:0" comment:"集合Id"'}];
  Container container = 5 [(go.field) = {tags:'gorm:"-" comment:"集合"'}];
  common.Tag mood = 9 [(go.field) = {tags:'gorm:"-" comment:"心情"'}];
  common.Tag weather = 21 [(go.field) = {tags:'gorm:"-" comment:"天气"'}];
  common.Area area = 19 [(go.field) = {tags:'gorm:"-" comment:"地区"'}];
  uint64 areaId = 20 [(go.field) = {tags:'gorm:"size:10;not null" comment:"地区"'}];
  string location = 14 [(go.field) = {tags:'gorm:"size:20;not null" comment:"位置"'}];
  repeated common.Tag tags = 6 [(go.field) = {tags:'gorm:"many2many:content_tag;ForeignKey:type,id;joinForeignKey:type,RefId;joinReferences:TagId" comment:"标签"'}];
  repeated common.Attr attrs = 7 [(go.field) = {tags:'gorm:"many2many:content_attr;ForeignKey:type,id;joinForeignKey:RefId;joinReferences:TagId" comment:"标签"'}];
  user.UserBase user = 8 [(go.field) = {tags:'gorm:"-" comment:"用户"'}];
  uint64 userId = 17 [(go.field) = {tags:'gorm:"size:20;not null;index" comment:"用户id"'}];
  uint32 sequence = 12 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"同级别的分类可根据sequence的值来排序，置顶"'}];
  uint32 anonymous = 15 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"是否匿名,0-是,1否"'}];
  ViewPermission permission = 13 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"查看权限"'}];
  uint32 status = 18 [(go.field) = {tags:'gorm:"type:int2;default:0"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only:true
  }];
  time.Time createdAt = 16 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  time.Time updatedAt = 27 [(go.field) = {tags:'gorm:"type:timestamptz(6)"'}];
  deletedAt.DeletedAt deletedAt = 22 [(go.field) = {tags:'gorm:"type:timestamptz(6);index"'}];
}


// Deprecated 类型拆分
message Container{
  uint64 id = 1 [(go.field) = {tags:'gorm:"primaryKey"'}];
  ContainerType type = 5 [(go.field) = {tags:'gorm:"type:int2;index" comment:"类型"'}];
  string title = 2 [(go.field) = {tags:'gorm:"size:50;not null" comment:"标题"'}];
  string desc = 3 [(go.field) = {tags:'gorm:"type:text;not null" comment:"描述"'}];
  string cover = 4 [(go.field) = {tags:'gorm:"size:255;not null" comment:"封面"'}];
  uint32 sequence = 12 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"同级别的分类可根据sequence的值来排序，置顶"'}];
  uint32 anonymous = 15 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"是否匿名,0-是,1否"'}];
  ViewPermission permission = 13 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"查看权限"'}];
  uint64 userId = 17 [(go.field) = {tags:'gorm:"size:20;not null;index" comment:"用户id"'}];
  uint32 status = 18 [(go.field) = {tags:'gorm:"type:int2;default:0"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only:true
  }];
  time.Time createdAt = 16 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  time.Time updatedAt = 27 [(go.field) = {tags:'gorm:"type:timestamptz(6)"'}];
  deletedAt.DeletedAt deletedAt = 22 [(go.field) = {tags:'gorm:"type:timestamptz(6);index"'}];
}

message Favorite{
  uint64 id = 1 [(go.field) = {tags:'gorm:"primaryKey"'}];
  user.UserBase user = 2 [(go.field) = {tags:'gorm:"-" comment:"用户"'}];
  uint64 userId = 17 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" comment:"用户id"'}];
  string title = 3 [(go.field) = {tags:'gorm:"size:10;not null" comment:"标题"'}];
  string desc = 5 [(go.field) = {tags:'gorm:"type:text;not null" comment:"描述"'}];
  string cover = 4 [(go.field) = {tags:'gorm:"size:255;not null" comment:"封面"'}];
  uint32 sequence = 12 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"同级别的分类可根据sequence的值来排序，置顶"'}];
  uint32 anonymous = 15 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"是否匿名,0-是,1否"'}];
  repeated  user.UserBase followUsers = 7 [(go.field) = {tags:'gorm:"-" comment:"关注人"'}];
  time.Time createdAt = 25 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  time.Time updatedAt = 27 [(go.field) = {tags:'gorm:"type:timestamptz(6)"'}];
  deletedAt.DeletedAt deletedAt = 26 [(go.field) = {tags:'gorm:"<-:false;type:timestamptz(6);index"'}];
}

message FavFollow{
  uint64 favId = 1 [(go.field) = {tags:'gorm:"primaryKey"'}];
  uint64 userId = 17 [(go.field) = {tags:'gorm:"primaryKey"  comment:"用户id"'}];
  time.Time createdAt = 25 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  deletedAt.DeletedAt deletedAt = 26 [(go.field) = {tags:'gorm:"<-:false;type:timestamptz(6);index"'}];
}

message UserStatistics{
  uint64 id = 1 [(go.field) = {tags:'gorm:"primaryKey"'}];
  uint32 diary = 2 [(go.field) = {tags:'gorm:"type:int8'}];
  uint32 moment = 3 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 article = 4 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 note = 5 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 favorite = 6 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 diaryBook = 7 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 comment = 8 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 like = 9 [(go.field) = {tags:'gorm:"type:int8"'}];
  uint32 collect = 10 [(go.field) = {tags:'gorm:"type:int8"'}];
  time.Time createdAt = 25 [(go.field) = {tags:'gorm:"type:timestamptz(6);default:now();index"'}];
  time.Time updatedAt = 27 [(go.field) = {tags:'gorm:"type:timestamptz(6)"'}];
}


enum ContentType{

  ContentPlaceholder = 0 [(enum.text) = "占位"];
  ContentMoment = 1 [(enum.text) = "瞬间"];
  ContentNote = 2 [(enum.text) = "笔记"];
  ContentDairy = 3 [(enum.text) = "日记"];
  ContentDairyBook = 4 [(enum.text) = "日记本"];
  ContentFavorites = 5 [(enum.text) = "收藏夹"];
  ContentCollection = 6 [(enum.text) = "收藏"];
  ContentComment = 7 [(enum.text) = "评论"];
}

// Deprecated 使用数据库表
/*enum AttrType{

  AttrPlaceholder = 0 [(enum.text) = "占位"];
  AttrImage = 1 [(enum.text) = "图片"];
  AttrVideo = 2 [(enum.text) = "视频"];
  AttrAudio = 3 [(enum.text) = "音频"];
  AttrCover = 4 [(enum.text) = "封面"];
  AttrCategory = 5 [(enum.text) = "分类"];
  AttrTitle = 6 [(enum.text) = "标题"];
  AttrAbstract = 7 [(enum.text) = "摘要"];
  AttrIntro = 8 [(enum.text) = "介绍"];
  AttrContentType = 9 [(enum.text) = "文本类型"];
  AttrModifyTimes = 10 [(enum.text) = "修改次数"];
}*/

// Deprecated 使用数据库表TagGroup
/*enum TagType{

  TagPlaceholder = 0 [(enum.text) = "占位"];
  TagContent = 1[(enum.text) = "内容"];
  TagMood = 2 [(enum.text) = "心情"];
  TagWeather = 3 [(enum.text) = "天气"];
  TagLocation = 4 [(enum.text) = "地点"];
  TagCategory = 5 [(enum.text) = "分类"];
  TagNotice = 6 [(enum.text) = "提示"];
}*/

// 可见范围
enum ViewPermission{

  ViewPermissionPlaceholder = 0 [(enum.text) = "占位"];
  ViewPermissionAll = 1 [(enum.text) = "无限制"];
  ViewPermissionSelf = 2 [(enum.text) = "仅自己"];
  ViewPermissionHomePage = 3 [(enum.text) = "主页"];
  ViewPermissionStranger = 4 [(enum.text) = "陌生人"];
  ViewPermissionShield = 5 [(enum.text) = "屏蔽部分人"];
  ViewPermissionOpen = 6 [(enum.text) = "开放部分人"];
}

// Deprecated 类型拆分
enum ContainerType{

  ContainerTypePlaceholder = 0 [(enum.text) = "占位"];
  ContainerTypeFavorites = 1[(enum.text) = "收藏夹"];
  ContainerTypeDiaryBook = 2[(enum.text) = "日记本"];
  ContainerTypeAlbum = 3[(enum.text) = "专辑"];
  ContainerTypeCollection = 4[(enum.text) = "合集"];
}

